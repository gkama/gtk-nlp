trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  targetFramework: 'netcoreapp3.1'
  projectFile: nlp.core/nlp.core.csproj
  projectFileTest: nlp.tests/nlp.tests.csproj
  buildConfiguration: 'Release'

stages:
- stage: Build
  displayName: Build
  jobs:
  - job: Build
    displayName: Build
    steps:
    - task: DotNetCoreCLI@2
      displayName: build
      inputs:
        projects: '$(projectFile)'
        command: build
        arguments: '--configuration $(buildConfiguration) --framework=$(targetFramework)'
    - task: DotNetCoreCLI@2
      displayName: test
      inputs:
        command: test
        projects: '$(projectFileTest)'
        arguments: '--configuration $(buildConfiguration)'
    - task: DotNetCoreCLI@2
      displayName: publish
      inputs:
        command: publish
        publishWebProjects: true
        arguments: '--configuration $(BuildConfiguration) -o $(System.DefaultWorkingDirectory)/app/publish --framework=$(targetFramework)'
        zipAfterPublish: true
    - task: PublishBuildArtifacts@1
      displayName: upload artifacts
      inputs:
        pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
        artifactName: 'gkamanlp'

- stage: Docker
  displayName: Docker
  jobs:
  - job: Build
    displayName: Build
    steps:
    - task: Docker@0
      displayName: build
      inputs:
        containerRegistryType: 'Container Registry'
        dockerRegistryConnection: 'gkama-docker-cr'
        imageName: 'gtk-nlp:latest'
        
- stage: AzureDocker
  displayName: Azure Docker
  jobs:
  - job: Build
    displayName: Build
    steps:
    - task: Docker@2
      displayName: Build and push
      inputs:
        containerRegistry: 'gkama-azure-cr'
        repository: 'gtk-nlp'
        command: 'buildAndPush'
        dockerfile: '**/Dockerfile'
        tags: 'latest'